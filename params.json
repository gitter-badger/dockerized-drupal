{
  "name": "Dockerized-drupal",
  "tagline": "Drupal on Docker containers with Apache + PHP and PostgreSQL / MySQL",
  "body": "[![Build Status](https://travis-ci.org/dminca/dockerized-drupal.svg?branch=master)](https://travis-ci.org/dminca/dockerized-drupal)\r\n## Drupal development environment based on Docker containers\r\n> Run Drupal **8.1.1** from Docker containers without having to worry about installing and configuring Apache + PHP and MySQL / PostgreSQL\r\n\r\n## Running the project\r\n\r\n* First, Drupal must be pulled from the web and configured\r\n```bash\r\nmake build-drupal\r\n```\r\n* Build the Docker image\r\n```bash\r\nmake\r\n```\r\n\r\n* Spin up the containers\r\n> During this stage, the PostgreSQL image will be pulled\r\n```bash\r\nmake up\r\n```\r\nAnd that's it, you got yourself a fully-functional Drupal website on \r\nlocalhost without wasting time to install _Apache + PHP + Drupal_ on your machine.\r\n\r\n## During Drupal install\r\nAt the **Set up database** step you need to add the **PostgreSQL container IPAddress**.\r\n```bash\r\ndocker inspect -f '{{.NetworkSettings.IPAddress}}' dockerizeddrupal_psql_1\r\n```\r\nwhere `dockerizeddrupal_psql_1` is the **container name**\r\n\r\nor MySQL container IP Address:\r\n```bash\r\ndocker inspect -f '{{.NetworkSettings.IPAddress}}' dockerizeddrupal_mysql_1\r\n```\r\nin case you're using MySQL.\r\n\r\n## Other commands\r\n```bash\r\n# stop containers\r\nmake down     \r\n\r\n# enter the Drupal container\r\nmake in       \r\n\r\n# restart containers\r\nmake restart\r\n\r\n# remove containers and all local docker images\r\nmake clean    \r\n```\r\n\r\n## Contributing\r\nFeel free to fork and contribute to this code. :)\r\n\r\n1. Fork the repo\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n### Project references:\r\n> Sources that guided me throughout the development of this project\r\n* [PHP + Apache official docker image][1]\r\n* [Docker compose official docs][2]\r\n* [Dockerfile official docs][3]\r\n* [Drupal system requirements - to be sure what to install][4]\r\n* [Apache and PHP on Docker - good medium article used for inspiration][5]\r\n* [Drupal installation step by step][6]\r\n* [Mastering Git submodules - medium][8]\r\n* [Drupal 7 with apache Dockerfile][9]\r\n* [php 7.0 - apache Dockerfile][10]\r\n* [OPCache problem solved][11]\r\n* [Enabling Apache modules in Dockerfile][12]\r\n* [Apache Dockerfile for inspiration][13]\r\n* [Docker inspect template magic][14]\r\n* [Official MySQL Docker image][15]\r\n\r\n### License\r\nLicensed under the great [GPLv3](http://choosealicense.com/licenses/gpl-3.0/)\r\n\r\nMade with :heart: for [drupal][7] developers.\r\n\r\n\r\n[1]: https://hub.docker.com/_/php/\r\n[2]: https://docs.docker.com/compose/compose-file\r\n[3]: https://docs.docker.com/engine/reference/builder\r\n[4]: https://www.drupal.org/requirements\r\n[5]: https://medium.com/dev-tricks/apache-and-php-on-docker-44faef716150#.l15osgxxs\r\n[6]: https://www.drupal.org/documentation/install/download\r\n[7]: https://www.drupal.org/\r\n[8]: https://medium.com/@porteneuve/mastering-git-submodules-34c65e940407#.p8ypfaftj\r\n[9]: https://github.com/docker-library/drupal/blob/master/7/apache/Dockerfile\r\n[10]: https://github.com/docker-library/php/blob/master/7.0/apache/Dockerfile\r\n[11]: https://hub.docker.com/r/sinso/phpfpm-flow/~/dockerfile/\r\n[12]: http://khornberg.github.io/articles/enabling-apache-modules-indockerfile-php/\r\n[13]: https://github.com/voduytuan/docker-apache-php/blob/master/Dockerfile\r\n[14]: http://container-solutions.com/docker-inspect-template-magic/\r\n[15]: https://hub.docker.com/_/mysql/",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}